name: Odoo test workflow

on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8 .


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: immensusf/odoo_test:1.0

  deploy:
    name: Deploy on server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Add environment variables to .env
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo SERVER_NAMES=${{ secrets.SERVER_NAMES }} >> .env
          echo ODOO_DB=${{ secrets.ODOO_DB }} >> .env
          echo ODOO_USERNAME=${{ secrets.ODOO_USERNAME }} >> .env
          echo ODOO_PASSWORD=${{ secrets.ODOO_PASSWORD }} >> .env
      - name: Copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: ".env,docker-compose.yaml,nginx/default.conf"
          target: "odoo_test"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd odoo_test
            sudo docker pull immensusf/odoo_test:1.0
            sudo docker-compose stop
            sudo docker-compose up -d

  send_message:
    name: Send message to telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Telegram Message Notify
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} successfully!
